[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Corrales. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Corrales M (2024). census2020download: 2020 Census Blocks Tools Download FTP. https://ejanalysis.github.io/census2020download/, https://ejanalysis.github.io/census2020download/index.html.","code":"@Manual{,   title = {census2020download: 2020 Census Blocks and Tools to Download from FTP},   author = {Mark Corrales},   year = {2024},   note = {https://ejanalysis.github.io/census2020download/, https://ejanalysis.github.io/census2020download/index.html}, }"},{"path":"/index.html","id":"download-census-2020-blocks-for-the-entire-us-from-ftp-to-use-in-ejam","dir":"","previous_headings":"","what":"2020 Census Blocks and Tools to Download from FTP","title":"2020 Census Blocks and Tools to Download from FTP","text":"information see census2020download package documentation also census2020download package github repository. package just set helper functions essentially scripts used download Census Bureau block data reformat use EJAM package. Also see EJAM R Package.","code":""},{"path":"/reference/add_block_radius_miles_to_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new column in the data.table passed to this function (by reference) — add_block_radius_miles_to_dt","title":"Create a new column in the data.table passed to this function (by reference) — add_block_radius_miles_to_dt","text":"Create new column data.table passed function (reference)","code":""},{"path":"/reference/add_block_radius_miles_to_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new column in the data.table passed to this function (by reference) — add_block_radius_miles_to_dt","text":"","code":"add_block_radius_miles_to_dt(dt, area_sqmi)"},{"path":"/reference/add_block_radius_miles_to_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new column in the data.table passed to this function (by reference) — add_block_radius_miles_to_dt","text":"dt data.table area_sqmi vector numbers area square miles. area square meters, converted like : area_sqmi <- census2020download:::area_sqmi_from_area_sqmeters(area_sqmeters)","code":""},{"path":"/reference/add_block_radius_miles_to_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new column in the data.table passed to this function (by reference) — add_block_radius_miles_to_dt","text":"NULL. side effect new column created reference data.table referred dt, data.table passed function actually gets changed reference calling environment without function needing return anything.","code":""},{"path":"/reference/add_block_radius_miles_to_dt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new column in the data.table passed to this function (by reference) — add_block_radius_miles_to_dt","text":"Note table magically gets updated just calling function -- assign function results object! just turn table NULL.","code":""},{"path":[]},{"path":"/reference/add_block_radius_miles_to_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new column in the data.table passed to this function (by reference) — add_block_radius_miles_to_dt","text":"","code":"passed_dt <- data.table::data.table(a = 1:10)   x <- add_block_radius_miles_to_dt(passed_dt, 9001:9010)   is.null(x) #> [1] TRUE   passed_dt #>         a block_radius_miles #>     <int>              <num> #>  1:     1           53.52670 #>  2:     2           53.52967 #>  3:     3           53.53264 #>  4:     4           53.53562 #>  5:     5           53.53859 #>  6:     6           53.54156 #>  7:     7           53.54453 #>  8:     8           53.54751 #>  9:     9           53.55048 #> 10:    10           53.55345"},{"path":"/reference/blockid2fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Census FIPS code of each US Census 2020 block — blockid2fips","title":"Census FIPS code of each US Census 2020 block — blockid2fips","text":"data.table use EJAM","code":""},{"path":"/reference/blockid2fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Census FIPS code of each US Census 2020 block — blockid2fips","text":"See EJAM package info. Created census2020_get_data() census2020_save_datasets() package can create data table store . Rows: 8,174,955 Columns: blockid (joins among tables blockwts, blockpoints, quaddata, blockid2fips) unique integer 1 number rows (blocks), used efficient ID 15-character FIPS code. blockfips (15-character string FIPS code)","code":""},{"path":"/reference/blockpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"lat/lon location of internal point of each Census 2020 block, used in EJAM package — blockpoints","title":"lat/lon location of internal point of each Census 2020 block, used in EJAM package — blockpoints","text":"data.table use EJAM","code":""},{"path":"/reference/blockpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"lat/lon location of internal point of each Census 2020 block, used in EJAM package — blockpoints","text":"See EJAM package info. Created census2020_get_data() census2020_save_datasets() package can create data table store . Rows: 8,174,955 Columns: blockid (joins among tables blockwts, blockpoints, quaddata, blockid2fips) unique integer 1 number rows (blocks), used efficient ID 15-character FIPS code. lat  Latitude decimal degrees lon  Longitude decimal degrees","code":""},{"path":"/reference/blockwts.html","id":null,"dir":"Reference","previous_headings":"","what":"2020 Census block weights (population as share of overall block group) — blockwts","title":"2020 Census block weights (population as share of overall block group) — blockwts","text":"data.table use EJAM","code":""},{"path":"/reference/blockwts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2020 Census block weights (population as share of overall block group) — blockwts","text":"See EJAM package info. Created census2020_get_data() census2020_save_datasets() package can create data table store . Rows: 8,174,955 Columns: blockid (joins among tables blockwts, blockpoints, quaddata, blockid2fips) unique integer 1 number rows (blocks), used efficient ID 15-character FIPS code. bgid unique ID block group contains block blockwt used EJAM package function doaggregate() summarize block group score average person location within 1 mile point, population weighted mean blockgroup scores blocks area. blockwt block's population weight, calculated block population fraction parent blockgroup pop. Based latest decennial Census table population count block. table weights can used calculating weighted mean sum blockgroup score buffer blocks given blockgroup buffer. sum weights blocks tells fraction whole parent blockgroup's population count blocks (ones found inside buffer, example). block_radius_miles effective radius block, pi times radius squared block area square miles. gets used adjust distances sites short distances internal point.","code":""},{"path":"/reference/block_radius_miles_from_area_sqmi.html","id":null,"dir":"Reference","previous_headings":"","what":"simple formula to calculate radius given area\r\nJust the square root of (area/pi) — block_radius_miles_from_area_sqmi","title":"simple formula to calculate radius given area\r\nJust the square root of (area/pi) — block_radius_miles_from_area_sqmi","text":"simple formula calculate radius given area Just square root (area/pi)","code":""},{"path":"/reference/block_radius_miles_from_area_sqmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simple formula to calculate radius given area\r\nJust the square root of (area/pi) — block_radius_miles_from_area_sqmi","text":"","code":"block_radius_miles_from_area_sqmi(area_sqmi)"},{"path":"/reference/block_radius_miles_from_area_sqmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simple formula to calculate radius given area\r\nJust the square root of (area/pi) — block_radius_miles_from_area_sqmi","text":"area_sqmi vector numbers area block, square miles. area available square meters, can converted like : area_sqmi <- census2020download:::area_sqmi_from_area_sqmeters(area_sqmeters)","code":""},{"path":"/reference/block_radius_miles_from_area_sqmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simple formula to calculate radius given area\r\nJust the square root of (area/pi) — block_radius_miles_from_area_sqmi","text":"vector numbers shape input","code":""},{"path":[]},{"path":"/reference/census2020download.html","id":null,"dir":"Reference","previous_headings":"","what":"2020 Census Blocks and Tools to Download from FTP — census2020download","title":"2020 Census Blocks and Tools to Download from FTP — census2020download","text":"Basic functions downloading FTP, unzipping, reading 2020 Census data US States single data.table, splitting tables use EJAM package.","code":""},{"path":"/reference/census2020download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"2020 Census Blocks and Tools to Download from FTP — census2020download","text":"package provides way prepare datasets US blocks key variables like population count, lat/lon internal point, FIPS. package downloads also retain columns like basic race ethnicity counts, small changes source code. See Census vs ACS geos info : https://www.census.gov/programs-surveys/acs/geography-acs/geography-boundaries--year.html proxistat package similar data.table also area population count. Key functions data.tables created include census2020_get_data() Download/ Unzip/ Read/ Clean data US Census blocks census2020_save_datasets() Use data create separate data.tables, save use EJAM package. Key data.table objects created: blockid2fips - data.table FIPS code blockid lookup blockpoints  - data.table latitude longitude internal points quaddata - data.table xyz format locations blocks, used create spatial index blocks EJAM package. blockwts - data.table Census 2020 population-based weight fraction parent block group population, size block","code":""},{"path":[]},{"path":"/reference/census2020download.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"2020 Census Blocks and Tools to Download from FTP — census2020download","text":"Maintainer: Mark Corrales corrales.mark@epa.gov","code":""},{"path":"/reference/census2020_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"start to clean up download block data — census2020_clean","title":"start to clean up download block data — census2020_clean","text":"Rename columns based census2020_download::census_col_names_map Drops columns needed. Returns data.table format.","code":""},{"path":"/reference/census2020_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"start to clean up download block data — census2020_clean","text":"","code":"census2020_clean(x, cols_to_keep = c(\"blockfips\", \"lat\", \"lon\", \"pop\", \"area\"))"},{"path":"/reference/census2020_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"start to clean up download block data — census2020_clean","text":"x data census2020_read() cols_to_keep optional, (renamed) columns retain return","code":""},{"path":"/reference/census2020_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"start to clean up download block data — census2020_clean","text":"data.table columns default:  blockfips lat lon pop area","code":""},{"path":"/reference/census2020_clean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"start to clean up download block data — census2020_clean","text":"area square meters part output census2020_read() can cleaned split smaller data files, used EJAM.","code":""},{"path":"/reference/census2020_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Census 2020 data files from FTP — census2020_download","title":"Download Census 2020 data files from FTP — census2020_download","text":"Warning: Code tested. Attempts download data files specified states US Census Bureau's FTP site Decennial Census file data. see https://www2.census.gov/programs-surveys/decennial/2020/technical-documentation/complete-tech-docs/summary-file/2020Census_PL94_171Redistricting_StatesTechDoc_English.pdf","code":""},{"path":"/reference/census2020_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Census 2020 data files from FTP — census2020_download","text":"","code":"census2020_download(folder = getwd(), mystates)"},{"path":"/reference/census2020_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Census 2020 data files from FTP — census2020_download","text":"folder Default getwd() mystates Character vector 2 letter abbreviations, now optional Default 50 states + DC + PR ","code":""},{"path":"/reference/census2020_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Census 2020 data files from FTP — census2020_download","text":"Effect download save locally number data files.","code":""},{"path":[]},{"path":"/reference/census2020_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Census 2020 data files from FTP — census2020_download","text":"","code":"if (FALSE) {  # library(census2020download)  census2020_download('./census2020zip', mystates = c('MD', 'DC'))  census2020_unzip('./census2020zip','./census2020out')  c2 <- census2020_read(folder = './census2020out', mystates = c('MD', 'DC'))  save(c2,file = 'census2020blocks.rdata')  dim(c2)  str(c2)  head(c2)  sum(c2$POP100)  plot(    c2$INTPTLON[substr(c2$GEOCODE,1,2)=='24'],    c2$INTPTLAT[substr(c2$GEOCODE,1,2)=='24'], pch='.')  }"},{"path":"/reference/census2020_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and clean up block data census 2020 (for EJAM) — census2020_get_data","title":"Download and clean up block data census 2020 (for EJAM) — census2020_get_data","text":"Download clean block data census 2020 (EJAM)","code":""},{"path":"/reference/census2020_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and clean up block data census 2020 (for EJAM) — census2020_get_data","text":"","code":"census2020_get_data(   folder = \"~/../Downloads/census2020zip\",   folderout = \"~/../Downloads/census2020out\",   mystates = c(state.abb, \"PR\", \"DC\"),   do_download = TRUE,   do_unzip = TRUE,   do_read = TRUE,   do_clean = TRUE,   ... )"},{"path":"/reference/census2020_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and clean up block data census 2020 (for EJAM) — census2020_get_data","text":"folder path downloaded files, try tempdir() folderout path assembled results files, try tempdir() mystates default DC 50 states -- lacks PR VI/GU/MU/need different source do_download whether census2020_download() do_unzip whether census2020_unzip() do_read whether census2020_read() do_clean whether census2020_clean() ... passed census2020_read()","code":""},{"path":"/reference/census2020_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and clean up block data census 2020 (for EJAM) — census2020_get_data","text":"invisibly returns data.table US Census blocks columns like blockid lat lon pop area (area square meters)","code":""},{"path":"/reference/census2020_get_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and clean up block data census 2020 (for EJAM) — census2020_get_data","text":"","code":"To create the individual data tables used by EJAM,        blockwts, blockpoints, quaddata, blockid2fips, and bgid2fips,      try something like            blocks <- census2020_get_data()        mylistoftables <- census2020_save_datasets(blocks)            where mylistoftables will be            list(bgid2fips = bgid2fips,        blockid2fips = blockid2fips,        blockpoints = blockpoints,        blockwts = blockwts,        quaddata = quaddata )            See ?census2020_save_datasets"},{"path":[]},{"path":"/reference/census2020_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile Census 2020 block data for all US states once downloaded and unzipped\r\nused by census2020_get() — census2020_read","title":"Compile Census 2020 block data for all US states once downloaded and unzipped\r\nused by census2020_get() — census2020_read","text":"Compile Census 2020 block data US states downloaded unzipped used census2020_get()","code":""},{"path":"/reference/census2020_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile Census 2020 block data for all US states once downloaded and unzipped\r\nused by census2020_get() — census2020_read","text":"","code":"census2020_read(   folder = \".\",   filenumbers = 1,   mystates,   sumlev = 750,   best_header_cols = c(\"LOGRECNO\", \"GEOCODE\", \"AREALAND\", \"AREAWATR\", \"POP100\", \"HU100\",     \"INTPTLAT\", \"INTPTLON\"),   best_data_cols = paste0(\"P00\", (20001:20011)) )"},{"path":"/reference/census2020_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile Census 2020 block data for all US states once downloaded and unzipped\r\nused by census2020_get() — census2020_read","text":"folder path filenumbers vector 1,2,3 -- default file 1. File01 Tables P1 P2. File02 Tables P3, P4, H1. File03 Table P5. mystates can vector 2-letter abbreviations states sumlev default 750, blocks best_header_cols default key columns like POP100, GEOCODE (fips), etc. best_data_cols default key race ethnicity fields","code":""},{"path":"/reference/census2020_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile Census 2020 block data for all US states once downloaded and unzipped\r\nused by census2020_get() — census2020_read","text":"data.frame 1 row per block, example","code":""},{"path":"/reference/census2020_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compile Census 2020 block data for all US states once downloaded and unzipped\r\nused by census2020_get() — census2020_read","text":"extensively tested. Attempts read files already downloaded unzipped, data files specified states US Census Bureau's FTP site Decennial Census file data. see https://www2.census.gov/programs-surveys/decennial/2020/technical-documentation/complete-tech-docs/summary-file/2020Census_PL94_171Redistricting_StatesTechDoc_English.pdf Also look package totalcensus https://github.com/GL-Li/totalcensus see Census website list possible fields etc.","code":"for example:   #  AREALAND      Area (Land)  #  AREAWATR      Area (Water)    #  BASENAME      Area Base Name  #  NAME          Area Name-Legal/Statistical Area Description (LSAD) Term-Part Indicator  #  FUNCSTAT      Functional Status Code  #  GCUNI         Geographic Change User Note Indicator    #  POP100        Population Count (100  #  HU100         Housing Unit Count (100  #  INTPTLAT      Internal Point (Latitude)  #  INTPTLON      Internal Point (Longitude)    File 1 has Table P1 and   Table P2. HISPANIC OR LATINO, AND NOT HISPANIC OR LATINO BY RACE  Universe: Total population  P0020001 P0020002 P0020003 P0020004 P0020005 P0020006 P0020007 P0020008 P0020009 P0020010 P0020011 P0020012 P0020013 P0020014  Total: P0020001   Hispanic or Latino P0020002  Not Hispanic or Latino: P0020003   Population of one race: P0020004   White alone P0020005  Black or African American alone P0020006  American Indian and Alaska Native alone P0020007  Asian alone P0020008  Native Hawaiian and Other Pacific Islander alone P0020009  Some Other Race alone P0020010  Population of two or more races: Population of two races: P0020011"},{"path":[]},{"path":"/reference/census2020_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile Census 2020 block data for all US states once downloaded and unzipped\r\nused by census2020_get() — census2020_read","text":"","code":"if (FALSE) {  # library(census2020download)  census2020_download('./census2020zip', mystates = c('MD', 'DC'))  census2020_unzip('./census2020zip','./census2020out')  c2 <- census2020_read(folder = './census2020out', mystates = c('MD', 'DC'))  dim(c2)  str(c2)  head(c2)  sum(c2$POP100)  plot(    c2$INTPTLON[substr(c2$GEOCODE,1,2) == '24'],     c2$INTPTLAT[substr(c2$GEOCODE,1,2) == '24'], pch = '.')  c2$LOGRECNO <- NULL  colnames(c2) <- census2020_download::census_col_names_map$Rname[     match(colnames(blocks2020), census2020_download::census_col_names_map$ftpname)     ]  }"},{"path":"/reference/census2020_save_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Create each separate data.table, and optionally save for use in a package\r\nThis was just done once, to create datasets for the EJAM package — census2020_save_datasets","title":"Create each separate data.table, and optionally save for use in a package\r\nThis was just done once, to create datasets for the EJAM package — census2020_save_datasets","text":"Create separate data.table, optionally save use package just done , create datasets EJAM package","code":""},{"path":"/reference/census2020_save_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create each separate data.table, and optionally save for use in a package\r\nThis was just done once, to create datasets for the EJAM package — census2020_save_datasets","text":"","code":"census2020_save_datasets(   x,   metadata = NULL,   save_as_data_for_package = FALSE,   overwrite = TRUE )"},{"path":"/reference/census2020_save_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create each separate data.table, and optionally save for use in a package\r\nThis was just done once, to create datasets for the EJAM package — census2020_save_datasets","text":"x single data.table called blocks census2020_get_data() metadata default Census 2020 related save_as_data_for_package logical, whether usethis::use_data() overwrite default TRUE, relevant usethis = TRUE","code":""},{"path":"/reference/census2020_save_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create each separate data.table, and optionally save for use in a package\r\nThis was just done once, to create datasets for the EJAM package — census2020_save_datasets","text":"named list huge data.tables EJAM package: bgid2fips blockid2fips blockpoints blockwts quaddata","code":""},{"path":"/reference/census2020_save_datasets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create each separate data.table, and optionally save for use in a package\r\nThis was just done once, to create datasets for the EJAM package — census2020_save_datasets","text":"","code":"To create the individual data tables used by EJAM,         blockwts, blockpoints, quaddata, blockid2fips, and bgid2fips,        from within the EJAM source package root folder, try something like             blocks <- census2020_get_data()        mylistoftables <- census2020_save_datasets(blocks,       save_as_data_for_package=TRUE, overwrite=TRUE)          See ?census2020_get_datasets        and see create_quaddata() in EJAM pkg."},{"path":"/reference/census2020_unzip.html","id":null,"dir":"Reference","previous_headings":"","what":"unzip Census 2020 zipped files already downloaded — census2020_unzip","title":"unzip Census 2020 zipped files already downloaded — census2020_unzip","text":"Warning: Code tested. Attempts read files already downloaded unzipped, data files specified states US Census Bureau's FTP site Decennial Census file data. see https://www2.census.gov/programs-surveys/decennial/2020/technical-documentation/complete-tech-docs/summary-file/2020Census_PL94_171Redistricting_StatesTechDoc_English.pdf","code":""},{"path":"/reference/census2020_unzip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unzip Census 2020 zipped files already downloaded — census2020_unzip","text":"","code":"census2020_unzip(folder = \".\", folderout = folder, filenumbers = 1, mystates)"},{"path":"/reference/census2020_unzip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"unzip Census 2020 zipped files already downloaded — census2020_unzip","text":"folder path zip files , default working directory folderout path want put files, created exist filenumbers vector 1,2,3 -- default file 1. File01 Tables P1 P2, population counts race ethnicity. File02 Tables P3, P4, H1. File03 Table P5. mystates optional vector 2letter state abbreviations unzip","code":""},{"path":"/reference/census2020_unzip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"unzip Census 2020 zipped files already downloaded — census2020_unzip","text":"Vector filenames unzipped contents","code":""},{"path":[]},{"path":"/reference/census2020_unzip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unzip Census 2020 zipped files already downloaded — census2020_unzip","text":"","code":"if (FALSE) {  # library(census2020download)  census2020_download('./census2020zip', mystates = c('MD', 'DC'))  census2020_unzip('./census2020zip','./census2020out')  c2 <- census2020_read(folder = './census2020out', mystates = c('MD', 'DC'))  save(c2, file = 'census2020blocks.rdata')  dim(c2)  str(c2)  head(c2)  sum(c2$POP100)  plot(c2$INTPTLON[substr(c2$GEOCODE,1,2)=='24'], c2$INTPTLAT[substr(c2$GEOCODE,1,2)=='24'], pch='.')  }"},{"path":"/reference/census_col_names_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Table that maps some Census variable names to short friendly variable names — census_col_names_map","title":"Table that maps some Census variable names to short friendly variable names — census_col_names_map","text":"Table maps Census variable names short friendly variable names","code":""},{"path":"/reference/census_col_names_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Table that maps some Census variable names to short friendly variable names — census_col_names_map","text":"data.frame:\t19 obs.  3 variables: $ ftpname : chr  \"LOGRECNO\" \"GEOCODE\" \"AREALAND\" \"AREAWATR\" ... $ Rname   : chr  \"logrecno\" \"blockfips\" \"arealand\" \"areawater\" ... $ longname: chr  \"logical record number\" \"15 digit Census FIPS\"  etc.","code":""},{"path":"/reference/lookup_states.html","id":null,"dir":"Reference","previous_headings":"","what":"basic information about US States from 2023 — lookup_states","title":"basic information about US States from 2023 — lookup_states","text":"FIPS code, name, etc., State, DC, PR, Island Areas","code":""},{"path":"/reference/lookup_states.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"basic information about US States from 2023 — lookup_states","text":"data.frame  \t58 obs.  26 variables $ statename       : chr  \"Alabama\" \"Alaska\" \"Arizona\" \"Arkansas\" ... $ FIPS.ST         : chr  \"01\" \"02\" \"04\" \"05\" ... $ ST              : chr  \"AL\" \"AK\" \"AZ\" \"AR\" ... $ ftpname         : chr  \"Alabama\" \"Alaska\" \"Arizona\" \"Arkansas\" ... $ REGION          : num  4 10 9 6 9 8 1 3 3 4 ... $ .usa.plus.pr  : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... $ .usa          : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... $ .state        : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... $ .contiguous.us: logi  TRUE FALSE TRUE TRUE TRUE TRUE ... $ .island.areas : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... $ area.sqmi       : int  52420 665384 113990 53179 163695 104094 5543 2489 68 65758 ... $ area.sqkm       : int  135767 1723337 295234 137732 423967 269601 14357 6446 177 170312 ... $ landarea.sqmi   : int  50645 570641 113594 52035 155779 103642 4842 1949 61 53625 ... $ landarea.sqkm   : int  131171 1477953 294207 134771 403466 268431 12542 5047 158 138887 ... $ waterarea.sqmi  : int  1775 94743 396 1143 7916 452 701 540 7 12133 ... $ waterarea.sqkm  : int  4597 245383 1026 2961 20501 1170 1816 1399 19 31424 ... $ inland.sqmi     : int  1058 19304 396 1143 2833 452 171 91 7 5027 ... $ inland.sqkm     : int  2740 49997 1026 2961 7339 1170 443 237 19 13019 ... $ coastal.sqmi    : num  517 26119 0 0 245 ... $ coastal.sqkm    : num  1340 67647 0 0 634 ... $ greatlakes.sqmi : num  0 0 0 0 0 0 0 0 0 0 ... $ greatlakes.sqkm : num  0 0 0 0 0 0 0 0 0 0 ... $ territorial.sqmi: num  199 49320 0 0 4837 ... $ territorial.sqkm: num  516 127739 0 0 12528 ... $ lat             : num  32.7 63.3 34.2 34.9 37.1 ... $ lon             : num  -86.8 -152.8 -111.6 -92.4 -119.5 ...","code":""},{"path":"/reference/lookup_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"basic information about US States from 2023 — lookup_states","text":"","code":"str(lookup_states) #> 'data.frame':\t58 obs. of  26 variables: #>  $ statename       : chr  \"Alabama\" \"Alaska\" \"Arizona\" \"Arkansas\" ... #>  $ FIPS.ST         : chr  \"01\" \"02\" \"04\" \"05\" ... #>  $ ST              : chr  \"AL\" \"AK\" \"AZ\" \"AR\" ... #>  $ ftpname         : chr  \"Alabama\" \"Alaska\" \"Arizona\" \"Arkansas\" ... #>  $ REGION          : num  4 10 9 6 9 8 1 3 3 4 ... #>  $ is.usa.plus.pr  : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... #>  $ is.usa          : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... #>  $ is.state        : logi  TRUE TRUE TRUE TRUE TRUE TRUE ... #>  $ is.contiguous.us: logi  TRUE FALSE TRUE TRUE TRUE TRUE ... #>  $ is.island.areas : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ area.sqmi       : int  52420 665384 113990 53179 163695 104094 5543 2489 68 65758 ... #>  $ area.sqkm       : int  135767 1723337 295234 137732 423967 269601 14357 6446 177 170312 ... #>  $ landarea.sqmi   : int  50645 570641 113594 52035 155779 103642 4842 1949 61 53625 ... #>  $ landarea.sqkm   : int  131171 1477953 294207 134771 403466 268431 12542 5047 158 138887 ... #>  $ waterarea.sqmi  : int  1775 94743 396 1143 7916 452 701 540 7 12133 ... #>  $ waterarea.sqkm  : int  4597 245383 1026 2961 20501 1170 1816 1399 19 31424 ... #>  $ inland.sqmi     : int  1058 19304 396 1143 2833 452 171 91 7 5027 ... #>  $ inland.sqkm     : int  2740 49997 1026 2961 7339 1170 443 237 19 13019 ... #>  $ coastal.sqmi    : num  517 26119 0 0 245 ... #>  $ coastal.sqkm    : num  1340 67647 0 0 634 ... #>  $ greatlakes.sqmi : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ greatlakes.sqkm : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ territorial.sqmi: num  199 49320 0 0 4837 ... #>  $ territorial.sqkm: num  516 127739 0 0 12528 ... #>  $ lat             : num  32.7 63.3 34.2 34.9 37.1 ... #>  $ lon             : num  -86.8 -152.8 -111.6 -92.4 -119.5 ..."},{"path":"/reference/quaddata.html","id":null,"dir":"Reference","previous_headings":"","what":"xyz location of internal point of each Census 2020 block,\r\nfor spatial index in EJAM — quaddata","title":"xyz location of internal point of each Census 2020 block,\r\nfor spatial index in EJAM — quaddata","text":"data.table use EJAM","code":""},{"path":"/reference/quaddata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"xyz location of internal point of each Census 2020 block,\r\nfor spatial index in EJAM — quaddata","text":"See EJAM package info. Created census2020_get_data() census2020_save_datasets() package can create data table store . Rows: 8,174,955 Columns: blockid (joins among tables blockwts, blockpoints, quaddata, blockid2fips) unique integer 1 number rows (blocks), used efficient ID 15-character FIPS code. x, y, z coordinates shown :","code":"str(quaddata)    Classes ‘data.table’ and 'data.frame':\t8174955 obs. of  4 variables:     $ BLOCK_X: num  205 205 204 204 204 ...    $ BLOCK_Z: num  2125 2125 2125 2126 2126 ...    $ BLOCK_Y: num  -3334 -3334 -3334 -3334 -3334 ...    $ blockid: int  1 2 3 4 5 6 7 8 9 10 ...       - attr(*, \".internal.selfref\")=<externalptr>      - attr(*, \"sorted\")= chr \"blockid\"      - attr(*, \"census_version\")= num 2020      - attr(*, \"acs_version\")= chr \"2016-2020\"      - attr(*, \"ejscreen_version\")= chr \"2.1\"      - attr(*, \"ejscreen_releasedate\")= chr \"September 2022\""}]
